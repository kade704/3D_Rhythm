<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///변수 초기화

CubeRotateSpeed = 3;
IsCubeRotating = false;
IsSongStarted = false;

CameraScale = 65;
CameraSmoothSpeed = 0.02;

IsSongPlaying = false;

SongVolume = 0;
SongVolumeChagingSpeed = 0.01;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///큐브 초기화

obj_Cube.PositionX = 0;
obj_Cube.PositionY = 0;
obj_Cube.PositionZ = 0;

obj_Cube.ForwardX = 1;
obj_Cube.ForwardY = 0;
obj_Cube.ForwardZ = 0;

obj_Cube.RightX = 0;
obj_Cube.RightY = 1;
obj_Cube.RightZ = 0;

obj_Cube.UpX = 0;
obj_Cube.UpY = 0;
obj_Cube.UpZ = 1;

obj_Cube.Angle = 0;
obj_Cube.AngleStart = 180;

obj_Cube.RotateSpeed = 3.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///카메라 초기화

obj_Camera.PositionX = 0;
obj_Camera.PositionY = 0;
obj_Camera.PositionZ = 0;

obj_Camera.ForwardX = 1;
obj_Camera.ForwardY = 0;
obj_Camera.ForwardZ = 0;

obj_Camera.RightX = 0;
obj_Camera.RightY = 1;
obj_Camera.RightZ = 0;

obj_Camera.UpX = 0;
obj_Camera.UpY = 0;
obj_Camera.UpZ = 1;

obj_Camera.TargetPositionX = 0;
obj_Camera.TargetPositionY = 0;
obj_Camera.TargetPositionZ = 0;

obj_Camera.TargetForwardX = 1;
obj_Camera.TargetForwardY = 0;
obj_Camera.TargetForwardZ = 0;

obj_Camera.TargetRightX = 0;
obj_Camera.TargetRightY = 1;
obj_Camera.TargetRightZ = 0;

obj_Camera.TargetUpX = 0;
obj_Camera.TargetUpY = 0;
obj_Camera.TargetUpZ = 1;

obj_Camera.SmoothSpeed = 0.02;
obj_Camera.TargetScale = 65;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD 초기화

obj_HUD.Text = "";
obj_HUD.TargetVignetteRadiusMin = 2.0;
obj_HUD.TargetVignetteRadiusMax = 2.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///큐브 이동

if(obj_Cube.Angle == 0 &amp;&amp; mouse_check_button(mb_left) &amp;&amp; !IsSongStarted)
{
    var dir = point_direction(window_get_width() / 2, window_get_height() / 2, mouse_x, mouse_y);    
    
    var velX = 0;
    var velY = 0;
    
    if(0 &lt; dir &amp;&amp; dir &lt;= 90)
    {
        velX = 1;
        velY = 0;
    }
    else if(90 &lt; dir &amp;&amp; dir &lt;= 180)
    {
        velX = 0;
        velY = -1;
    }
    else if(180 &lt; dir &amp;&amp; dir &lt;= 270)
    {
        velX = -1;
        velY = 0;
    }
    else if(270 &lt; dir &amp;&amp; dir &lt;= 360)
    {
        velX = 0;
        velY = 1;
    }
    
    if(instance_position_3d(obj_Cube.PositionX + (velX * 10), obj_Cube.PositionY + (velY * 10), obj_Cube.PositionZ, obj_Tile) != noone)
    {
        obj_Cube.PositionX += (velX * 10);
        obj_Cube.PositionY += (velY * 10);
    
        obj_Cube.ForwardX = velX;
        obj_Cube.ForwardY = velY;
        obj_Cube.ForwardZ = 0;
        
        obj_Cube.RightX = -velY;
        obj_Cube.RightY =  velX;
        obj_Cube.RightZ = 0;
        
        obj_Cube.UpX = 0;
        obj_Cube.UpZ = 0;
        obj_Cube.UpZ = 1;      
        
        obj_Cube.AngleStart = 90;
        
        with(obj_Cube) event_user(0);
        
        var tile = instance_position_3d(obj_Cube.PositionX, obj_Cube.PositionY, obj_Cube.PositionZ, obj_Tile);
        if(tile.ModelIndex == 1)
        {
            var index = (((obj_Cube.PositionX) / 30) * 2) + ((obj_Cube.PositionY + 30) / 60);
            obj_Jukebox.Selected = index;
            var song = song_get_artist(index) + " - " + song_get_name(index);
            obj_HUD.Text = song;
            with(obj_HUD) event_user(0);
            
            audio_stop_all();
            var snd = audio_play_sound(song_get_object(index), 0, false);
            audio_sound_set_track_position(snd, song_get_highlightTime(index));
            
            IsSongPlaying = true;
        } 
        else 
        {
            with(obj_HUD) event_user(1);
            IsSongPlaying = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///메인 룸으로 이동

if(keyboard_check_pressed(vk_enter))
{
    var tile = instance_position_3d(obj_Cube.PositionX, obj_Cube.PositionY, obj_Cube.PositionZ, obj_Tile);
    if(tile.ModelIndex == 1)
    {
        IsSongStarted = true;
        IsSongPlaying = false;
        with(obj_LobbyMap) event_user(0);
        with(obj_Logo) event_user(0);
    } 
}

if(instance_number(obj_Tile) == 1)
{
    room_goto(Main);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///카메라 이동

obj_Camera.TargetPositionX = obj_Cube.PositionX;
obj_Camera.TargetPositionY = obj_Cube.PositionY;
obj_Camera.TargetPositionZ = obj_Cube.PositionZ;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///볼륨 조정

if(IsSongPlaying)
{
    if(SongVolume &lt; 1)
    {
        SongVolume += SongVolumeChagingSpeed;
    }
    else
    {
        SongVolume = 1;
    }
}
else
{
    if(0 &lt; SongVolume)
    {
        SongVolume -= SongVolumeChagingSpeed;
    }
    else
    {
        SongVolume = 0;
    }
}

audio_master_gain(SongVolume);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
