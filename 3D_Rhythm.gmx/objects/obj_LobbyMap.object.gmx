<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///변수 초기화

Alarm0Count = 4;
Alarm0Rate = 8;

Alarm1Count = 0;
Alarm1Rate = 8;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///타일 생성

Tiles = noone;

for(var i = 0; i &lt; 4; i++)
{
    Tiles[i, 0] = instance_create_3d(i * 10, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, obj_Tile);
    Tiles[i, 0].Angle = 180;
    Tiles[i, 0].Alpha = 180;
}

for(var i = 4; i &lt; ceil(obj_Jukebox.Length / 2) * 4 + 4; i++)
{
    var index = 0;    

    if(i &lt; ceil(obj_Jukebox.Length / 2) * 4 + 1)
    {
        Tiles[i, index] = instance_create_3d(i * 10, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, obj_Tile);
        Tiles[i, index].Angle = 0;
        index++;
    }

    Tiles[i, index] = instance_create_3d(floor(i / 4) * 40, (i % 4) * -10 + -10, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, obj_Tile);
    Tiles[i, index].Angle = 0;
    if(i % 4 == 3) Tiles[i, index].ModelIndex = 1;
    index++;
    
    Tiles[i, index] = instance_create_3d(floor(i / 4) * 40, (i % 4) * 10 + 10, 0, 0, 1, 0, -1, 0, 0, 0, 0, 1, obj_Tile);
    Tiles[i, index].Angle = 0;
    if(i % 4 == 3) Tiles[i, index].ModelIndex = 1;
}

alarm[0] = Alarm0Rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; array_height_2d(Tiles); i++)
{
    for(var j = 0; j &lt; array_length_2d(Tiles, i); j++)
    {
        var distance = point_distance_3d(Tiles[i, j].PositionX, Tiles[i, j].PositionY, Tiles[i, j].PositionZ, obj_Cube.PositionX, obj_Cube.PositionY, obj_Cube.PositionZ);
    
        if((Alarm1Count * 20) &lt;= distance &amp;&amp; distance &lt; ((Alarm1Count + 1) * 20))
        {
            Tiles[i, j].State = 2;
            log(distance)
        }
    }
}
if((Alarm1Count++ * 20) &lt; 500) 
{
    alarm[1] = Alarm1Rate;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///타일 회전 반복

for(var i = 0; i &lt; array_length_2d(Tiles, Alarm0Count); i++)
{
    Tiles[Alarm0Count, i].State = 1;
}

if(Alarm0Count++ &lt; array_height_2d(Tiles)) 
{
    alarm[0] = Alarm0Rate;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = Alarm1Rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
