<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///변수 초기화

PositionX = 0;
PositionY = 0;
PositionZ = 0;

ForwardX = 1;
ForwardY = 0;
ForwardZ = 0;

RightX = 0;
RightY = 1;
RightZ = 0;

UpX = 0;
UpY = 0;
UpZ = 1;

Angle = 90;
RotateSpeed = 4;

IsRotating = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 모델 불러오기

Model = load_model("Model/Cube0.obj");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left = keyboard_check_pressed(ord('A'));
var right = keyboard_check_pressed(ord('D'));
var down = keyboard_check_pressed(ord('S'));
var up = keyboard_check_pressed(ord('W'));

if(!IsRotating)
{
    if(left)
    {
        if(instance_position_3d(PositionX, PositionY - 10, PositionZ, obj_Tile) != noone)
        {
            PositionY -= 10;
        
            ForwardX = 0;
            ForwardY = -1;
            ForwardZ = 0;
            
            RightX = 1;
            RightY = 0;
            RightZ = 0;
            
            UpX = 0;
            UpZ = 0;
            UpZ = 1;
            
            Angle = 0;
        }
    }
    else if(right)
    {
        if(instance_position_3d(PositionX, PositionY + 10, PositionZ, obj_Tile) != noone)
        {
            PositionY += 10;
        
            ForwardX = 0;
            ForwardY = 1;
            ForwardZ = 0;
            
            RightX = -1;
            RightY = 0;
            RightZ = 0;
            
            UpX = 0;
            UpZ = 0;
            UpZ = 1;
            
            Angle = 0;
        }
    }
    else if(down)
    {
        if(instance_position_3d(PositionX - 10, PositionY, PositionZ, obj_Tile) != noone)
        {
            PositionX -= 10;
        
            ForwardX = -1;
            ForwardY = 0;
            ForwardZ = 0;
            
            RightX = 0;
            RightY = -1;
            RightZ = 0;
            
            UpX = 0;
            UpZ = 0;
            UpZ = 1;
            
            Angle = 0;
        }
    }
    else if(up)
    {
        if(instance_position_3d(PositionX + 10, PositionY, PositionZ, obj_Tile) != noone)
        {
            PositionX += 10;
        
            ForwardX = 1;
            ForwardY = 0;
            ForwardZ = 0;
            
            RightX = 0;
            RightY = 1;
            RightZ = 0;
            
            UpX = 0;
            UpZ = 0;
            UpZ = 1;
            
            Angle = 0;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 각도 변환

if(Angle &lt; 90) 
{
    Angle += RotateSpeed;
    IsRotating = true;
}
else
{
    IsRotating = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///큐브 그리기

var pv = rotate_axis(ForwardX, ForwardY, ForwardZ, RightX, RightY, RightZ, Angle + 225);
var px = PositionX + (ForwardX * -5) + (pv[0] * 5 * sqrt(2));
var py = PositionY + (ForwardY * -5) + (pv[1] * 5 * sqrt(2));
var pz = PositionZ + (ForwardZ * -5) + (pv[2] * 5 * sqrt(2));

var fv = rotate_axis(ForwardX, ForwardY, ForwardZ, RightX, RightY, RightZ, Angle);
var fx = fv[0];
var fy = fv[1];
var fz = fv[2];

var rx = RightX;
var ry = RightY;
var rz = RightZ;

var uv = rotate_axis(UpX, UpY, UpZ, RightX, RightY, RightZ, Angle);
var ux = uv[0];
var uy = uv[1];
var uz = uv[2];

draw_model(px, py, pz, fx, fy, fz, rx, ry, rz, ux, uy, uz, Model, sprite_get_texture(spr_Cube0, 0), 5, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
