<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IsDebugMode = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var debug = keyboard_check_pressed(vk_f1);

if(debug)
{
    IsDebugMode = !IsDebugMode;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_aqua);
d3d_transform_set_identity();

for(var i = 0; i &lt; obj_File.Length; i++)
{
    draw_quad(obj_File.Positions[i, 0], obj_File.Positions[i, 1], obj_File.Positions[i, 2],
              obj_File.Vectors[i, 0], obj_File.Vectors[i, 1], obj_File.Vectors[i, 2],
              obj_File.Normals[i, 0], obj_File.Normals[i, 1], obj_File.Normals[i, 2],
              0.5, make_colour_rgb(255, 0, 255));
}

d3d_transform_set_identity();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DebugMode

if(IsDebugMode)
{
    d3d_transform_set_identity();
    
    d3d_primitive_begin(pr_linelist);
    for(var i = 0; i &lt; obj_File.Length; i++)
    {
        var u = cross(obj_File.Vectors[i, 0], obj_File.Vectors[i, 1], obj_File.Vectors[i, 2], obj_File.Normals[i, 0], obj_File.Normals[i, 1], obj_File.Normals[i, 2]);
        u = normalize(u[0], u[1], u[2]);
        
        d3d_vertex_colour(obj_File.Positions[i, 0], obj_File.Positions[i, 1], obj_File.Positions[i, 2], make_colour_rgb(255, 0, 0), 1);
        d3d_vertex_colour(obj_File.Positions[i, 0] + (obj_File.Vectors[i, 0] * 5), obj_File.Positions[i, 1] + (obj_File.Vectors[i, 1] * 5), obj_File.Positions[i, 2] + (obj_File.Vectors[i, 2] * 5), make_colour_rgb(255, 0, 0), 1);
        
        d3d_vertex_colour(obj_File.Positions[i, 0], obj_File.Positions[i, 1], obj_File.Positions[i, 2], make_colour_rgb(0, 255, 0), 1);
        d3d_vertex_colour(obj_File.Positions[i, 0] + (obj_File.Normals[i, 0] * 5), obj_File.Positions[i, 1] + (obj_File.Normals[i, 1] * 5), obj_File.Positions[i, 2] + (obj_File.Normals[i, 2] * 5), make_colour_rgb(0, 255, 0), 1);
        
        d3d_vertex_colour(obj_File.Positions[i, 0], obj_File.Positions[i, 1], obj_File.Positions[i, 2], make_colour_rgb(0, 0, 255), 1);
        d3d_vertex_colour(obj_File.Positions[i, 0] + (u[0] * 5), obj_File.Positions[i, 1] + (u[1] * 5), obj_File.Positions[i, 2] + (u[2] * 5), make_colour_rgb(0, 0, 255), 1);
    }
    d3d_primitive_end();
    d3d_transform_set_identity();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
