<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

CameraX = 0;
CameraY = 0;
CameraZ = 0;

TargetX = 0;
TargetY = 0;
TargetZ = 0;

Scale = 120;
Angle = -40;
SmoothSpeed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize d3d

d3d_start();
d3d_set_perspective(true);
d3d_set_hidden(true);
d3d_set_lighting(false);
d3d_set_culling(false);
d3d_set_shading(false);
draw_set_colour(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var index = global.CubeIndex * 4;

var vx = global.Vertices[index + 1, 0] - global.Vertices[index + 2, 0];
var vy = global.Vertices[index + 1, 1] - global.Vertices[index + 2, 1];
var vz = global.Vertices[index + 1, 2] - global.Vertices[index + 2, 2];
var vv = normalize(vx, vy, vz);

var px = global.Vertices[index + 1, 0] + (vx / 2);
var py = global.Vertices[index + 1, 1] + (vy / 2);
var pz = global.Vertices[index + 1, 2] + (vz / 2);

show_debug_message(px);
show_debug_message(py);
show_debug_message(pz);
show_debug_message("");

var u = normalize(global.Vertices[index + 0, 0] - global.Vertices[index + 3, 0], global.Vertices[index + 0, 1] - global.Vertices[index + 3, 1], global.Vertices[index + 0, 2] - global.Vertices[index + 3, 2]);
var v = rotate_axis(vv[0] * Scale, vv[1] * Scale, vv[2] * Scale, u[0], u[1], u[2], Angle);

TargetX = lerp(TargetX, px, SmoothSpeed);
TargetY = lerp(TargetY, py, SmoothSpeed);
TargetZ = lerp(TargetZ, pz, SmoothSpeed);
CameraX = lerp(CameraX, px + v[0], SmoothSpeed);
CameraY = lerp(CameraY, py + v[1], SmoothSpeed);
CameraZ = lerp(CameraZ, pz + v[2], SmoothSpeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var aspect = window_get_width() / window_get_height();

d3d_set_projection_ext(CameraX, CameraY, CameraZ, TargetX, TargetY, TargetZ, 0, 0, 1, 45, aspect, 0.1, 1000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
